To Do
=====

- need predicate: whether pk works with digest (eg, can't use md5 with ECDSA)
- need ctx->impl operation?
- still crashes in paramgen/keygen

- implement other key formats: pkcs1 pkcs3 pkcs8 ...
- keygen/paramgen support: add required flag, auto-check
- libcrypto: add yield callbacks for interactivity
- check safety
- check synchronization & race conditions
- check error reporting
- GCM support
- gcrypt initialization
- add cipher-tag-length operation, catalog ???
  - NIST SP 800-38D says GCM tag lengths include: 128 downto 96 by 8s (bits)
    or 64 or 32 (bits) if you really must

- info functions on impls should use impl methods, not catalog info
  to allow extension with unknown algs

- securing key storage memory
  - "zero memory when done with" (memset, variants of memset that don't get optimized away)
  - advice: "don't swap key memory to disk" (gcry_malloc_secure, mlock)
  - problems:
    - GC can create copies (maybe malloc 'atomic-interior (non-moving) memory?)
    - IO can create copies, eg read pkcs8 from file, decode... file buffer may linger
  - partial solutions:
    - make-crypto-bytes: malloc 'atomic-interior (non-moving), attach zeroing finalizer
  - may need to create alt path that circumvents Racket code as much as possible
  - alternative: write crypto core in C (or similar), bind to Racket

- RSA
  - padding: use "RSAES-OAEP" for encryption, "RSASSA-PSS" for signing
    http://rdist.root.org/2009/10/06/why-rsa-encryption-padding-is-critical/
  - "If you're using PKCS#1v1.5 padding for RSA encryption, *cut it out*!"
    http://blog.cryptographyengineering.com/2012/06/bad-couple-of-years-for-cryptographic.html
    http://blog.cryptographyengineering.com/2012/09/on-provable-security-of-tls-part-1.html

  - regarding nettle padding support (lacking):
    http://blog.gmane.org/gmane.comp.encryption.nettle.bugs/month=20130601

- nettle RSA
  - encrypt/decrypt undocumented, uses PKCS#1 v1.5 padding (bad!)

- CRYPTO_memcmp & other timing-related stuff

- sections for Password Hashing
  - pbkdf2
    - libcrypto, gcrypt (gcry_kdf_derive)
  - bcrypt, scrypt (from elsewhere)

- ciphers: track bytes encrypted, better space checking

- update tests
- update docs
- offer multiple padding options?

- add more Racket impls

- fix balance of code between operations and impls
  current interfaces are designed around openssl/libcrypto; 
  cmd-ssl impl already exposes some problems


#|
Misc resources
 - http://wiki.openssl.org/index.php/Libcrypto_API
 - http://www.openssl.org/docs/crypto/crypto.html
 - http://wiki.openssl.org/index.php/EVP
 - http://www.openssl.org/docs/crypto/EVP_PKEY_set1_RSA.html
 - http://www.openssl.org/docs/crypto/EVP_PKEY_keygen.html
 - http://en.wikipedia.org/wiki/PKCS1
 - http://www.openssl.org/docs/crypto/EVP_PKEY_sign.html
 - http://www.openssl.org/docs/crypto/EVP_PKEY_verify.html
 - http://www.openssl.org/docs/crypto/EVP_PKEY_derive.html

High-level crypto lib design (?)
 - http://www.gnupg.org/related_software/gpgme/

Crypto talks
 - http://rdist.root.org/2009/08/06/google-tech-talk-on-common-crypto-flaws/
 - http://rdist.root.org/2009/06/10/when-crypto-attacks-slides-posted/

Authenticated encryption, GCM, etc
 - http://stackoverflow.com/questions/12153009/openssl-c-example-of-aes-gcm-using-evp-interfaces
 - http://www.cryptopp.com/wiki/Authenticated_Encryption
 - http://www.cryptopp.com/wiki/CCM
 - http://www.cryptopp.com/wiki/GCM
 - http://www.openssl.org/docs/crypto/EVP_EncryptInit.html (see GCM Mode notes)
 - http://stackoverflow.com/questions/12153009/openssl-c-example-of-aes-gcm-using-evp-interfaces
 - http://incog-izick.blogspot.com/2011/08/using-openssl-aes-gcm.html

Certificate pinning
 - https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning
 - https://www.owasp.org/index.php/Pinning_Cheat_Sheet
 - http://www.thoughtcrime.org/blog/authenticity-is-broken-in-ssl-but-your-app-ha/
 - https://www.imperialviolet.org/2011/05/04/pinning.html
 - http://dev.chromium.org/sts

|#
