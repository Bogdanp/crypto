To Do
=====

- better version awareness
  - eg, scrypt added to gcrypt 1.6
  - find and add common library versions
- need predicate: whether pk works with digest (eg, can't use md5 with ECDSA)
- need ctx->impl operation?
- still crashes in paramgen/keygen
- create internal {digest,cipher,etc}-info structs for catalog information ??
  - then impl contains info struct, can extend w/o changing catalog
- stress test (to find elusive crashes)

- implement other key formats: pkcs1 pkcs3 pkcs8 ...
- keygen/paramgen support: add required flag, auto-check
- libcrypto: add yield callbacks for interactivity
- check safety
- check synchronization & race conditions
- check error reporting
- gcrypt initialization

- securing key storage memory
  - "zero memory when done with" (memset, variants of memset that don't get optimized away)
  - advice: "don't swap key memory to disk" (gcry_malloc_secure, mlock)
  - problems:
    - GC can create copies (maybe malloc 'atomic-interior (non-moving) memory?)
    - IO can create copies, eg read pkcs8 from file, decode... file buffer may linger
  - partial solutions:
    - make-crypto-bytes: malloc 'atomic-interior (non-moving), attach zeroing finalizer
  - may need to create alt path that circumvents Racket code as much as possible
  - alternative: write crypto core in C (or similar), bind to Racket

- RSA
  - padding: use "RSAES-OAEP" for encryption, "RSASSA-PSS" for signing
    http://rdist.root.org/2009/10/06/why-rsa-encryption-padding-is-critical/
  - "If you're using PKCS#1v1.5 padding for RSA encryption, *cut it out*!"
    http://blog.cryptographyengineering.com/2012/06/bad-couple-of-years-for-cryptographic.html
    http://blog.cryptographyengineering.com/2012/09/on-provable-security-of-tls-part-1.html

  - regarding nettle padding support (lacking):
    http://blog.gmane.org/gmane.comp.encryption.nettle.bugs/month=20130601

- nettle RSA
  - encrypt/decrypt undocumented, uses PKCS#1 v1.5 padding (bad!)

- CRYPTO_memcmp & other timing-related stuff

- sections for Password Hashing
  - pbkdf2
    - libcrypto, gcrypt (gcry_kdf_derive)
  - bcrypt, scrypt (from elsewhere)

- update docs
- offer multiple padding options?

- add more Racket impls

- fix balance of code between operations and impls
  current interfaces are designed around openssl/libcrypto; 
  cmd-ssl impl already exposes some problems


#|
Misc resources
 - http://wiki.openssl.org/index.php/Libcrypto_API
 - http://www.openssl.org/docs/crypto/crypto.html
 - http://wiki.openssl.org/index.php/EVP
 - http://www.openssl.org/docs/crypto/EVP_PKEY_set1_RSA.html
 - http://www.openssl.org/docs/crypto/EVP_PKEY_keygen.html
 - http://en.wikipedia.org/wiki/PKCS1
 - http://www.openssl.org/docs/crypto/EVP_PKEY_sign.html
 - http://www.openssl.org/docs/crypto/EVP_PKEY_verify.html
 - http://www.openssl.org/docs/crypto/EVP_PKEY_derive.html

High-level crypto lib design (?)
 - http://www.gnupg.org/related_software/gpgme/

Crypto talks
 - http://rdist.root.org/2009/08/06/google-tech-talk-on-common-crypto-flaws/
 - http://rdist.root.org/2009/06/10/when-crypto-attacks-slides-posted/

Authenticated encryption, GCM, etc
 - http://stackoverflow.com/questions/12153009/openssl-c-example-of-aes-gcm-using-evp-interfaces
 - http://www.cryptopp.com/wiki/Authenticated_Encryption
 - http://www.cryptopp.com/wiki/CCM
 - http://www.cryptopp.com/wiki/GCM
 - http://www.openssl.org/docs/crypto/EVP_EncryptInit.html (see GCM Mode notes)
 - http://stackoverflow.com/questions/12153009/openssl-c-example-of-aes-gcm-using-evp-interfaces
 - http://incog-izick.blogspot.com/2011/08/using-openssl-aes-gcm.html

Certificate pinning
 - https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning
 - https://www.owasp.org/index.php/Pinning_Cheat_Sheet
 - http://www.thoughtcrime.org/blog/authenticity-is-broken-in-ssl-but-your-app-ha/
 - https://www.imperialviolet.org/2011/05/04/pinning.html
 - http://dev.chromium.org/sts

|#

============================================================
PK key and parameter formats

Key formats
 - PKCS1 (RSA only)
 - SubjectPublicKeyInfo ({i2d,d2i}_PUBKEY) (public key only)
 - PKCS8 DER/PEM (private key only, optional encryption/password)
   - for DSA, format actually specified by PKCS11 v2.01 section 11.9
 - {i2d,d2i}_{Private,Public}Key uses *some* format, possibly ad hoc
   d2i needs to be told what kind of key expected
 - {d2i,i2d}_{PublicKey,PrivateKey} doesn't seem to work on EC keys
 - {d2i,i2d}_PUBKEY encodes key as SubjectPublicKeyInfo (ie, includes type of key)
 - PKCS#8 might handle all kinds of private keys
   - {d2i,i2d}_PKCS8_PRIV_KEY_INFO(...);
   - EVP_PKEY *EVP_PKCS82PKEY(PKCS8_PRIV_KEY_INFO *p8);
   - PKCS8_PRIV_KEY_INFO *EVP_PKEY2PKCS8(EVP_PKEY *pkey);
 - Nope, both PUBKEY and PKCS8_PRIV_KEY_INFO functions also crash on EC keys.
 - ECPKParameters vs ECParameters
   - according to http://www.faqs.org/rfcs/rfc3279.html:
     ECPKParameters = CHOICE { ECParameters | ...}

References:
 - https://groups.google.com/forum/#!topic/mailing.openssl.users/HsiN-8Lt0H8
 - http://openssl.6102.n7.nabble.com/difference-between-i2d-PUBKEY-and-i2d-PublicKey-td43869.html
 - http://www.openssl.org/docs/crypto/pem.html

 - http://www.ietf.org/rfc/rfc2459.txt
   encodings including SubjectPublicKeyInfo
 - http://tools.ietf.org/html/rfc5480
   Elliptic Curve Cryptography Subject Public Key Information

TODO: support predefined DH params
 - http://tools.ietf.org/html/rfc3526
 - http://tools.ietf.org/html/rfc5114

Resources:
 - http://csrc.nist.gov/groups/ST/crypto_apps_infra/csor/algorithms.html#modules
   - some OIDs for AES, digests, etc
 - PKCS#3: ftp://ftp.rsasecurity.com/pub/pkcs/ascii/pkcs-3.asc
   - ASN.1 for DHParameter, dhKeyAgreement OID for AlgorithmIdentifier
 - PKCS#8: http://www.ietf.org/rfc/rfc5208.txt
   - ASN.1 for PrivateKeyInfo and EncryptedPrivateKeyInfo
   - lots of holes
   - note: allows BER encoding, not just DER
 - https://tools.ietf.org/html/rfc5958
   - obsoletes PKCS#8 ??
 - PKIX: http://www.ietf.org/rfc/rfc5758.txt
   - updates http://www.ietf.org/rfc/rfc3280.txt
   - obsoletes http://www.ietf.org/rfc/rfc2459.txt
   - ASN.1 for SubjectPublicKeyInfo, OIDs for variants
     - covers RSA, DH (incompat w/ PKCS#3 ??!!), and DSA; no EC
 - PKIX algs and OIDS: http://www.ietf.org/rfc/rfc3279.txt
   - covers RSA, DSA, ECDSA, DH, ECDH
   - OIDs for several EC curves
 - RFC 5480: http://www.ietf.org/rfc/rfc5480.txt
   - updates RFC 3279
   - more OIDs for EC curves?
