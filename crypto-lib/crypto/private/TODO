To Do
=====

- check safety
- check synchronization & race conditions
- check error reporting

- RSA
  - padding: use "RSAES-OAEP" for encryption, "RSASSA-PSS" for signing
    http://rdist.root.org/2009/10/06/why-rsa-encryption-padding-is-critical/
  - "If you're using PKCS#1v1.5 padding for RSA encryption, *cut it out*!"
    http://blog.cryptographyengineering.com/2012/06/bad-couple-of-years-for-cryptographic.html
    http://blog.cryptographyengineering.com/2012/09/on-provable-security-of-tls-part-1.html

- reorg modules
  - crypto/main - provides generic operations + crypto-factories param
  - crypto/factory/{libcrypto,nettle,etc} - provides factories + init code
  - user must set crypto-factories

- abstract classes for digest, cipher w/ error checking
- GCM support
- doc: how to get impls from specs
- new API for sign/verify
- gcrypt initialization

- nettle RSA
  - encrypt/decrypt undocumented, uses PKCS#1 v1.5 padding (bad!)

- CRYPTO_memcmp & other timing-related stuff

- sections for Password Hashing
  - pbkdf2
    - libcrypto, gcrypt (gcry_kdf_derive)
  - bcrypt, scrypt (from elsewhere)

- ciphers: track bytes encrypted, better space checking

- add error checking and reporting code to libgcrypt impls
- update tests
- update docs
- offer multiple padding options?

- add more Racket impls
- add support for gnutls, etc (?)

- fix balance of code between operations and impls
  current interfaces are designed around openssl/libcrypto; 
  cmd-ssl impl already exposes some problems

- figure out what to do with leftover pieces (eg DH libcrypto code)
